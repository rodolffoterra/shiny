ggplot(df) + geom_boxplot(aes(Attrition, PercentSalaryHike))
df <- read_csv('dados/dataset.csv')
ggplot(df) + geom_boxplot(aes(Attrition, MonthlyIncome))
ggplot(df) + geom_boxplot(aes(Attrition, PercentSalaryHike))
ggplot(df) + geom_bar(aes(TrainingTimesLastYear, fill = Attrition), position = 'fill')
ggplot(df) + geom_bar(aes(BusinessTravel, fill = Attrition), position = 'fill')
ggplot(df) + geom_bar(aes(OverTime, fill = Attrition), position = 'fill')
ggplot(df) + geom_bar(aes(StockOptionLevel, fill = Attrition), position = 'fill')
ggplot(df) + geom_bar(aes(EnvironmentSatisfaction, fill = Attrition), position = 'fill')
ggplot(df) + geom_bar(aes(JobSatisfaction, fill = Attrition), position = 'fill')
ggplot(df) + geom_bar(aes(JobInvolvement, fill = Attrition), position = 'fill')
ggplot(df) + geom_bar(aes(RelationshipSatisfaction, fill = Attrition), position = 'fill')
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
getwd()
# Imports
library(caret)
library(ggplot2)
library(gridExtra)
library(data.table)
library(car)
library(caTools)
library(corrplot)
library(rpart)
library(rpart.plot)
# Carregando o dataset
dados_rh <- fread('dados/dataset.csv')
dim(dados_rh)
str(dados_rh)
summary(dados_rh)
names(dados_rh)
# Criamos uma coluna de anos anteriores de experiência para visualizar melhor o
# perfil de experiência do funcionário.
dados_rh$PriorYearsOfExperience <- dados_rh$TotalWorkingYears - dados_rh$YearsAtCompany
View(dados_rh)
# Criamos um novo recurso de estabilidade média para traçar o perfil de permanência média
# dos funcionários em empresas anteriores.
dados_rh$AverageTenure <- dados_rh$PriorYearsOfExperience / dados_rh$NumCompaniesWorked
# A estabilidade média produz valores como Inf devido à natureza de sua derivação
# Substituímos para zero.
summary(dados_rh$AverageTenure)
dados_rh$AverageTenure[!is.finite(dados_rh$AverageTenure)] <- 0
summary(dados_rh$AverageTenure)
# Analisamos e dividimos os dados como base na coluna Termination, que indica se
# o funcionário foi desligado da empresa.
dados_rh_1 <- dados_rh[dados_rh$Attrition != 'Termination']
dados_rh_1 <- droplevels(dados_rh_1)
dim(dados_rh_1)
summary(dados_rh_1)
# Mesmo filtro anterior, mas agora por demissão voluntária
dados_rh_2 <- dados_rh[dados_rh$Attrition != 'Voluntary Resignation']
dados_rh_2 <-droplevels(dados_rh_2)
dim(dados_rh_2)
summary(dados_rh_2)
# Plots de análise univariada
ggplot(dados_rh) + geom_bar(aes(x = Gender))
ggplot(dados_rh) + geom_density(aes(x = Age))
ggplot(dados_rh) + geom_density(aes(x = AgeStartedWorking))
ggplot(dados_rh) + geom_bar(aes(x = Attrition))
ggplot(dados_rh) + geom_bar(aes(x = Department))
ggplot(dados_rh) + geom_bar(aes(x = JobRole))
ggplot(dados_rh) + geom_bar(aes(x = Education)) + facet_grid(~EducationField)
ggplot(dados_rh) + geom_bar(aes(x = Education)) + facet_grid(~Gener)
ggplot(dados_rh) + geom_bar(aes(x = Education)) + facet_grid(~Gender)
table(dados_rh$Department)
table(dados_rh$JobRole)
ggplot(dados_rh) + geom_bar(aes(x = EducationField))
# Multiplot Grid
p.TotalWorkingYears       <- ggplot(dados_rh) + geom_density(aes(TotalWorkingYears))
p.YearsAtCompany          <- ggplot(dados_rh) + geom_density(aes(YearsAtCompany))
p.YearsSinceLastPromotion <- ggplot(dados_rh) + geom_density(aes(YearsSinceLastPromotion))
p.YearsWithCurrManager    <- ggplot(dados_rh) + geom_density(aes(YearsWithCurrManager))
p.YearsInCurrentRole      <- ggplot(dados_rh) + geom_density(aes(YearsInCurrentRole))
p.PriorYearsOfExperience  <- ggplot(dados_rh) + geom_density(aes(PriorYearsOfExperience))
# Organiza no grid
grid.arrange(p.TotalWorkingYears,
p.YearsAtCompany,
p.YearsSinceLastPromotion,
p.YearsWithCurrManager,
p.YearsInCurrentRole,
p.PriorYearsOfExperience,
nrow = 2,
ncol = 3)
df <- dados_rh
names(df)
str(df)
library(tidyverse)
glimpse(df)
count(mtcars, 'carb')
count(df,'Age')
names(df)
skimr::skim(df)
table(df[,1])
table(df[,2])
table(df[,3])
table(df[,4])
table(df[,5])
table(df[,6])
table(df[,7])
table(df[,8])
table(df[,9])
table(df[,10])
table(df[,11])
table(df[,11])
table(df[,13])
table(df[,14])
table(df[,15])
table(df[,16])
table(df[,17])
table(df[,18])
table(df[,19])
table(df[,20])
table(df[,21])
table(df[,22])
table(df[,23])
table(df[,24])
table(df[,26])
ggplot(dados_rh) + geom_density(aes(df[,26]))
names(df[,26])
ggplot(dados_rh) + geom_density(aes(YearsInCurrentRole))
names(df[,27])
table(df[,27])
table(df[,29])
table(df[,30])
ggplot(dados_rh) + geom_density(aes(AgeStartedWorking))
table(df[,31])
# Tempo de experiência anterior
# Vamos descobrir a proporção de funcionários com menos de alguns anos de experiência
# (valores escolhidos: 1, 3, 5, 7, 10 anos)
length(which(dados_rh$PriorYearsOfExperience < 1)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 3)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 5)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 7)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 10)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 3 & dados_rh$PriorYearsOfExperience > 1)) / length(dados_rh$PriorYearsOfExperience)
# Tempo de experiência anterior
# Vamos descobrir a proporção de funcionários com menos de alguns anos de experiência
# (valores escolhidos: 1, 3, 5, 7, 10 anos)
length(which(dados_rh$PriorYearsOfExperience < 1)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 3 & dados_rh$PriorYearsOfExperience >= 1)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 5 & dados_rh$PriorYearsOfExperience >= 3)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 7 & dados_rh$PriorYearsOfExperience >= 5)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 10 & dados_rh$PriorYearsOfExperience >= 7)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 1)) / length(dados_rh$PriorYearsOfExperience)  +
length(which(dados_rh$PriorYearsOfExperience < 3 & dados_rh$PriorYearsOfExperience >= 1)) / length(dados_rh$PriorYearsOfExperience)+
length(which(dados_rh$PriorYearsOfExperience < 5 & dados_rh$PriorYearsOfExperience >= 3)) / length(dados_rh$PriorYearsOfExperience)+
length(which(dados_rh$PriorYearsOfExperience < 7 & dados_rh$PriorYearsOfExperience >= 5)) / length(dados_rh$PriorYearsOfExperience)+
length(which(dados_rh$PriorYearsOfExperience < 10 & dados_rh$PriorYearsOfExperience >= 7)) / length(dados_rh$PriorYearsOfExperience)
# Tempo de experiência anterior
# Vamos descobrir a proporção de funcionários com menos de alguns anos de experiência
# (valores escolhidos: 1, 3, 5, 7, 10 anos)
length(which(dados_rh$PriorYearsOfExperience < 1)) / length(dados_rh$PriorYearsOfExperience)  +
length(which(dados_rh$PriorYearsOfExperience < 3 & dados_rh$PriorYearsOfExperience >= 1)) / length(dados_rh$PriorYearsOfExperience)+
length(which(dados_rh$PriorYearsOfExperience < 5 & dados_rh$PriorYearsOfExperience >= 3)) / length(dados_rh$PriorYearsOfExperience)+
length(which(dados_rh$PriorYearsOfExperience < 7 & dados_rh$PriorYearsOfExperience >= 5)) / length(dados_rh$PriorYearsOfExperience)+
length(which(dados_rh$PriorYearsOfExperience < 10 & dados_rh$PriorYearsOfExperience >= 7)) / length(dados_rh$PriorYearsOfExperience) +
length(which(dados_rh$PriorYearsOfExperience >= 10)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience >= 10)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 1)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 3 & dados_rh$PriorYearsOfExperience >= 1)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 5 & dados_rh$PriorYearsOfExperience >= 3)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 7 & dados_rh$PriorYearsOfExperience >= 5)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 10 & dados_rh$PriorYearsOfExperience >= 7)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience >= 10)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 1)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 3 & dados_rh$PriorYearsOfExperience >= 1)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 5 & dados_rh$PriorYearsOfExperience >= 3)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 7 & dados_rh$PriorYearsOfExperience >= 5)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience < 10 & dados_rh$PriorYearsOfExperience >= 7)) / length(dados_rh$PriorYearsOfExperience)
length(which(dados_rh$PriorYearsOfExperience >= 10)) / length(dados_rh$PriorYearsOfExperience)
# Idade
length(which(dados_rh$Age < 30)) / length(dados_rh$Age)
length(which(dados_rh$Education == 3)) / length(dados_rh$Education)
length(which(dados_rh$Education == 4)) / length(dados_rh$Education)
# Boxplot mostrando a distribuição do salário mensal para todos os 4 níveis
# de satisfação no trabalho de 1-4
ggplot(data = subset(dados_rh, !is.na(JobSatisfaction)), aes(JobSatisfaction, MonthlyIncome)) +
geom_boxplot()
# Correlação
cor(dados_rh$TotalWorkingYears, dados_rh$YearsAtCompany,          use = "complete.obs")
cor(dados_rh$YearsAtCompany,    dados_rh$YearsInCurrentRole,      use = "complete.obs")
cor(dados_rh$YearsAtCompany,    dados_rh$YearsSinceLastPromotion, use = "complete.obs")
cor(dados_rh$YearsAtCompany,    dados_rh$YearsWithCurrManager,    use = "complete.obs")
cor(dados_rh$TotalWorkingYears, dados_rh$MonthlyIncome,           use = "complete.obs")
cor(dados_rh$YearsAtCompany,    dados_rh$MonthlyIncome,           use = "complete.obs")
# Scatterplots
ggplot(dados_rh) + geom_point(aes(TotalWorkingYears, MonthlyIncome))
ggplot(dados_rh) + geom_point(aes(YearsAtCompany, MonthlyIncome))
# Vamos investigar a relação do equilíbrio entre vida pessoal e profissional e renda mensal
ggplot(data = subset(dados_rh, !is.na(WorkLifeBalance)), aes(WorkLifeBalance, MonthlyIncome)) +
geom_boxplot()
# Verificando a diferença salarial entre homens e mulheres.
ggplot(data = subset(dados_rh, !is.na(Gender)), aes(Gender, MonthlyIncome, fill = Gender)) +
geom_boxplot() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5, size = 10)) +
labs(x = "Gender", y = "Monthly Income", title = "Salário Mensal Entre Gêneros") +
coord_flip()
# Função
ggplot(data = subset(dados_rh, !is.na(JobRole))) + geom_boxplot(aes(JobRole, MonthlyIncome)) +
ggtitle("Salário Mensal Por Função")
ggplot(data = subset(dados_rh, !is.na(JobRole))) + geom_boxplot(aes(JobRole, AgeStartedWorking)) +
ggtitle("Idade Que Iniciou na Função")
ggplot(data = subset(dados_rh, !is.na(JobRole))) + geom_boxplot(aes(JobRole, Age)) +
ggtitle("Idade Por Função")
ggplot(data = subset(dados_rh, !is.na(JobRole))) + geom_boxplot(aes(JobRole, YearsAtCompany)) +
ggtitle("Tempo de Empresa (em anos)")
ggplot(data = na.omit(dados_rh)) + geom_bar(aes(JobRole, fill = Education), position = "fill") +
ggtitle("Nível de Educação Por Função") +
ylab("Proportion")
# Plots de análise multivariada para variáveis normalmente usadas durante o processo de contratação
ggplot(data = dados_rh_1) +
geom_bar(aes(x = Education , fill = Attrition), position = 'fill') +
facet_grid(.~Department)
ggplot(data = dados_rh_1) +
geom_bar(aes(x = Education , fill = Attrition), position = 'fill') +
facet_grid(.~JobRole)
ggplot(data = dados_rh_1) +
geom_bar(aes(x = EducationField , fill = Attrition), position = 'fill') +
facet_grid(.~JobRole) +
theme(axis.text.x = element_text(angle = -90, hjust = 0))
# Plots de análise multivariada para variáveis normalmente usadas após o processo de contratação
ggplot(dados_rh_1) + geom_bar(aes(x = Age, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(x = Department, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(x = DistanceFromHome, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(x = `Employee Source`, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(x = JobRole, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(x = MaritalStatus, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(x = AverageTenure, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(x = Education, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(x = EducationField, fill = Attrition),position ='fill')
ggplot(dados_rh_1) + geom_bar(aes(x = Gender, fill = Attrition), position = 'fill')
# Plots de análise multivariada entre algumas variáveis e o status do funcionário
ggplot(dados_rh_1) + geom_boxplot(aes(Attrition, MonthlyIncome))
ggplot(dados_rh_1) + geom_boxplot(aes(Attrition, PercentSalaryHike))
ggplot(dados_rh_1) + geom_bar(aes(TrainingTimesLastYear, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(BusinessTravel, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(OverTime, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(StockOptionLevel, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(EnvironmentSatisfaction, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(JobSatisfaction, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(JobInvolvement, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(RelationshipSatisfaction, fill = Attrition), position = 'fill')
ggplot(dados_rh_1) + geom_bar(aes(WorkLifeBalance, fill = Attrition), position = 'fill')
